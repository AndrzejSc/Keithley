# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'aboutDialogGUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

from LIB.Dialogs.aboutDialogGUI import Ui_AboutDialogGUI
from LIB.Dialogs.helpDialogGUI import Ui_HelpDialogGUI
from LIB.Dialogs.saveOptionsGUI import Ui_saveOptionsGUI


class AboutDialogWindow(QtWidgets.QMainWindow, Ui_AboutDialogGUI):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setupUi(self)

        # Obsługa guzików
        self.OKBtn.clicked.connect(self.OKBtnClick)
        # self.OKBtn.clicked.connect(self.infoMessageBox("Skarga odrzucona","Z przykrością informuję, iż ze względu na niedopełnienie warunków formalnych"
        #                                       "skarga nie została rozpatrzona."))
        self.SendBtn.clicked.connect(self.sendBtnClick)

    def sendBtnClick(self):
        self.infoMessageBox("Skarga odrzucona", "Ze względu na niedopełnienie warunków formalnych"
                                                " skarga nie została rozpatrzona. Spróbuj ponownie później.")

    def OKBtnClick(self):
        self.close()

    # Okno dialogowe - Info Box
    def infoMessageBox(self, title: str, infoMessage: str):
        dlg = QMessageBox(self)
        dlg.setWindowTitle(title)
        dlg.setText(infoMessage)
        dlg.setStandardButtons(QMessageBox.Ok)
        dlg.setIcon(QMessageBox.Information)
        dlg.exec_()
        return


class HelpDialogWindow(QtWidgets.QMainWindow, Ui_HelpDialogGUI):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setupUi(self)

        # Obsługa guzików
        self.pushButton.clicked.connect(self.OKBtnClick)

    def OKBtnClick(self):
        self.close()


# class SaveOptionsWindow(QtWidgets.QMainWindow, Ui_saveOptionsGUI):
#     def __init__(self, parent=None):
#         super().__init__(parent)
#         self.setupUi(self)
#
#         # Zmiennne
#         self.saveFilePath = ""
#         self.autoSave = self.autoSaveCheckBox.isChecked()
#         self.saveInterval = self.timeIntervalSpinBox.value()
#
#         #Eventy
#         self.timeIntervalSpinBox.valueChanged.connect(self.changeTimeInterval)
#         self.selectPathBtn.clicked.connect(self.selectPath)
#
#     def selectPath(self):
#         print("SelectPathButton")
#
#         super().saveToExcelWindow()
#         pass
#
#     def changeTimeInterval(self):
#         self.saveInterval = self.timeIntervalSpinBox.value()
#         print(self.saveInterval)